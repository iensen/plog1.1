sorts

#time = 0..2.
#boolean = {true, false}.
#rulename = m(#time).
#head_fluent = head(#time).
#action  = random(#head_fluent).
#flip_action = flip(#time).

attributes

head: #time -> #boolean.
ab: #rulename -> #boolean.
interfere: #action -> #boolean.
agreed_to_play: #time -> #boolean.
do2: #flip_action -> #boolean.
statements

% the coin usually comes up with head (at random) at time step T+1,
% if the play was true at T-1, unless the experiment was deliberately interfered with.
random(head(T+1)) :- agreed_to_play(T), not ab(m(T)),
                     not interfere(random(head(T+1))).

%axioms (we have omitted (e.g, for inferred) some axioms that will not change results)
do(head(1), true) :- do2(flip(0), true).

%scenario 0: obs(agreed_to_play(0)).
%agreed_to_play(0).

%scenario 1: obs(agreed_to_play(0)). obs(heads(1)).
%agreed_to_play(0). :- not head(1) = true.

%scenario 2: obs(agreed_to_play(0)), do2(flip(1), true).
agreed_to_play(0). do2(flip(0), true).
